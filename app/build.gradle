apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    signingConfigs {
        //调试版的keystore
        debug {
            storeFile file("E:\\kingteller.jks")
            storePassword "kingteller"
            keyAlias "kingteller"
            keyPassword "kingteller"
        }
        //发布版的keystore
        release {
            storeFile file("E:\\kingteller.jks")
            storePassword "kingteller"
            keyAlias "kingteller"
            keyPassword "kingteller"
        }
    }
    defaultConfig {
        applicationId "com.kingteller"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 53
        versionName "2.2.20"
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        multiDexEnabled true;//解决方法数量超过65536个时无法编译的问题
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/DEPENDENCIES'
        }
    }
    useLibrary 'org.apache.http.legacy'
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "KingTellerClient_${defaultConfig.versionName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:25.0.0'
    compile files('libs/AMap_2DMap_V2.3.0.jar')
    compile files('libs/AMap_Services_V2.3.0.jar')
    compile files('libs/Android_Location_V1.3.0.jar')
    compile files('libs/httpcore-4.3.2.jar')
    compile files('libs/httpmime-4.3.2.jar')
    compile files('libs/jpush-sdk-release1.6.1.jar')
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.google.zxing:core:3.3.0'
}
